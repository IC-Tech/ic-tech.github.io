/*!
 * ic-tech.github.io v1.0.0
 * https://ic-tech.github.io/
 * Copyright © 2021 Imesh Chamara
 * Released under the ISC License
 */
!function(){"use strict";const t=t=>({success:!1,error:{code:t,message:[,"network error occurred","request timed out","server did not respond","response could not parse"][t]}}),e=(e,r,s,n)=>{var i=new XMLHttpRequest;i.open((s=s||{}).meth||(n&&!s.meth?"POST":"GET"),e+(0==s.fresh?"":(e.indexOf("?")>=0?"&":"?")+"t="+(new Date).getTime())),Object.keys(s.head||{}).forEach((t=>{i.setRequestHeader(t,s.head[t])})),i.onreadystatechange=()=>{if(4==i.readyState&&0!=i.status){if(!i.response)return r(t(3));try{r(s.raw?i.response:JSON.parse(i.response))}catch(e){r(t(4))}}},i.onerror=()=>{r(t(1))},i.ontimeout=()=>{r(t(2))},i.send(n)},r=encodeURIComponent,s=decodeURIComponent,n=(t,e)=>e?t instanceof o?t:new o(t):t instanceof o?t.v:t,i=t=>t instanceof Array?t:[t],a=t=>Object.keys(t).map((e=>`[data-${e}="${t[e]}"]`)).join("");class o{constructor(t,e){this.v=e?o.ce(t,"string"==typeof e||"object"==typeof e?e:void 0):"string"==typeof t?o.qs(t):t}get c(){return Array.from(this.ch).map((t=>new o(t)))}get cl(){return this.v.classList}get ch(){return this.v.children}get chn(){return this.v.childNodes}ap(t){return this.v.appendChild(n(t)),this}chr(t){if(t)i(t).forEach((t=>{n(t,1).rem()}));else for(;this.ch.length>0;)this.ch[0].remove();return this}cla(t){return this.cl.add(...i(t)),this}clr(t){return this.cl.remove(...i(t)),this}clc(t){return!i(t).some((t=>!this.cl.contains(t)))}get st(){return this.v.style}get d(){return this.v.dataset}set stp(t){this.st.setProperty(t[0],t[1])}get txt(){return this.v.textContent}set txt(t){this.v.textContent=t}get html(){return this.v.innerHTML}set html(t){this.v.innerHTML=t}ga(t){return this.v.getAttribute(t)}ra(t){return this.v.removeAttribute(t),this}sa(t,e){return this.v.setAttribute(t,e),this}ae(t,e){return this.v.addEventListener(t,e),this}get p(){return new o(this.v.parentElement)}get tag(){return this.v.nodeName}get val(){return this.v.value}set val(t){this.v.value=t}rem(){return this.v.remove(),this}get prev(){return new o(this.v.previousElementSibling)}get prevN(){return new o(this.v.previousSibling)}get next(){return new o(this.v.nextElementSibling)}get nextN(){return new o(this.v.nextSibling)}qs(t){return new o(o.qs(t,this.v))}ds(t){return new o(o.qs(a(t),this.v))}static get d(){return document}static qs(t,e){return(e||this.d).querySelector(t)}static qsa(t,e){return(e||this.d).querySelectorAll(t)}static ce(t,e){var r=t&&["createTextNode","createDocumentFragment","createComment"][["#text","#document-fragment","#comment"].indexOf(t)];return r?this.d[r](e):this.d.createElement(t,e)}static cen(t,e){return this.d.createElementNS(t,e)}static ds(t){return new o(a(t))}}const d=t=>t||"string"==typeof t||"number"==typeof t&&0==t,h=t=>t instanceof Array?t:Object.keys(t).map((e=>[e,t[e]])),c=i,l=t=>new o(t.t,"#"==t.t[0]&&t.txt||1),u=t=>{if("string"==typeof t.d&&(t.d={t:"#text",txt:t.d}),t.cr&&(t.cr.ap(t.e=l(t.d)),t.d.cg&&t.d.cg(t.e)),d(t.d.t)&&t.e.tag.toUpperCase()!=t.d.t.toUpperCase()&&(t.e.p.v.replaceChild((t.t=l(t.d)).v,t.e.v),t.e=t.t,t.d.cg&&t.d.cg(t.e)),t.d.s&&((t,e)=>{Object.keys(t).forEach((t=>{e(t)}))})(t.d.s,(e=>{t.d.s[e]!=t.e.st[e]&&(t.e.st[e]=t.d.s[e])})),t.d.at&&h(t.d.at).forEach((e=>{void 0===e[1]?t.e.ra(e[0]):d(e[1])&&(t.e.ga(e[0])!=e[1].toString()&&t.e.sa(...e))})),t.d.d&&h(t.d.d).forEach((e=>{e[1].toString()!=t.e.d[e[0]]&&(t.e.d[e[0]]=e[1].toString())})),t.d.cl&&(t.e.clc(t.t=c(t.d.cl).join(" ").split(" "))||t.e.cla(t.t),t.e.cl.forEach((e=>{-1==t.t.indexOf(e)&&t.e.clr(e)}))),d(t.d.html)&&t.e.html!=t.d.html&&(t.e.html=t.d.html),d(t.d.txt)&&t.e.txt!=t.d.txt&&(t.e.txt=t.d.txt),t.d.e&&h(t.d.e).forEach((e=>{t.e.v[e[0]]!=e[1]&&(t.e.v[e[0]]=e[1])})),!t.d.noupdate&&t.d.ch){var e=t.d.nodes||t.e.chn.length!=t.e.ch.length,r=Array.from(t.e[e?"chn":"ch"]).map((t=>new o(t)));e&&!t.d.nodes&&(r=r.filter((t=>"#text"!=t.tag&&"#comment"!=t.tag?1:t.rem()&&0))),t.d.ch.forEach(((e,s)=>{d(e)&&u(r[s]?{e:r[s],d:e}:{cr:t.e,d:e})})),r.slice(t.d.ch.length).forEach((t=>{t.rem()}))}return d(t.d.id)&&(t.e.v.id=t.d.id),t};class p{constructor(){this._elm=u.bind(this),this.e=null,this._a=!1}update(t){if(this.data?this.pevData=Object.assign({},this.data):t&&(this.data={}),t&&Object.assign(this.data,t),this.e&&this.render&&(!this.willUpdate||!(t=>0===t||!1===t)(this.willUpdate()))){var e=this.render();this._elm({e:this.e,d:{ch:c(e)}}),this._a?this.didUpdate&&this.didUpdate():(this._a=!0,this.didMount&&this.didMount())}}mount(t){this.e=new o(t),this.update()}}var m=window.ic||class{};m.XHR=e,m.xhr=(t,r,s)=>new Promise((n=>{e(t,n,r,s)})),m.icApp=o,m.pram=t=>{if("object"==typeof t)return Object.keys(t).map((e=>r(e)+"="+r(t[e]))).join("&");for(var e,n={},i=/(?:(?:\?|&)?([^=&?#]*)=([^=&?#]*))/g;e=i.exec(t);)n[e[1]=s(e[1])]?(n[e[1]]instanceof Array||(n[e[1]]=[n[e[1]]]),n[e[1]].push(s(e[2]))):n[e[1]]=s(e[2]);return n},m.IAR=p,window.ic=m;var v;v=[{t:"h1",txt:"IAProto",at:{id:"iaproto"}},{ch:[{ch:[{t:"i",txt:"This article is not over yet."}],t:"b",nodes:1}],t:"p",nodes:1},{t:"h2",txt:"What is IAProto?",at:{id:"what-is-iaproto"}},{t:"p",txt:"IAProto is a simple Api query language that provides an alternative to REST. It allows clients to define the structure of the data required. IAProto main objective was to reduce the size of the request in simple method. IAProto also been used as a API standard."},{t:"h4",txt:"Why we need to reduce size?",at:{id:"why-we-need-to-reduce-size"}},{ch:[{t:"li",txt:"It will make page load faster."},{t:"li",txt:"reduce the ram usage."},{t:"li",txt:"reduce the data usage."}],t:"ul"},{t:"h2",txt:"IAProto Request",at:{id:"iaproto-request"}},{ch:["Every IAProto request should use ",{t:"code",txt:"POST"}," method and request data should be provide in the request body. HTTP headers should contain the ",{t:"code",txt:"Content-Type"}," and ",{t:"code",txt:"Content-Length"},' with its data. every request must contain the "query" and use "filter" for the data reduce.'],t:"p",nodes:1},{t:"h4",txt:"parameters",at:{id:"parameters"}},{ch:[{t:"thead",ch:[{t:"tr",ch:[{t:"th",txt:"name"},{t:"th",txt:"data type"},{t:"th",txt:"description"}]}]},{t:"tbody",ch:[{t:"tr",ch:[{t:"td",txt:"query"},{t:"td",txt:"string"},{t:"td",txt:"request function name"}]},{t:"tr",ch:[{t:"td",txt:"filter"},{t:"td",txt:"object"},{t:"td",ch:[{t:"a",at:{href:"#filtering-options"},txt:"filtering options"}],nodes:1}]}]}],t:"table"},{t:"h4",txt:"example",at:{id:"example"}},{t:"pre",ch:[{t:"code",lang:"",txt:'POST https://ianime.now.sh/api/v2/endpoint\n{\n  "query": "name",\n  "user": "_knight48_",\n  "filter": {\n    "scores": 0\n  }\n}',nodes:1}]},{t:"h2",txt:"IAProto Response",at:{id:"iaproto-response"}},{ch:["HTTP response status code always will be ",{t:"code",txt:"200 OK"},". IAProto remove all the empty when response. basically ",{t:"code",txt:"null"},", ",{t:"code",txt:'""'},", ",{t:"code",txt:"false"},', ... values like these will not in the response. response should use "success" to indicate if there was a error and successful response will contain a ',{t:"code",txt:"result"},"."],t:"p",nodes:1},{t:"h4",txt:"example",at:{id:"example"}},{t:"pre",ch:[{t:"code",lang:"",txt:'{\n  "success": true,\n  "result": {\n    "user": "_knight48_",\n    "id": 12,\n    "state": "offline"\n  }\n}',nodes:1}]},{ch:["every unsuccessful response will contain a ",{t:"code",txt:"error"},". it should contain a error code and a error message. type of error code must be string or number and the error message should be a string."],t:"p",nodes:1},{t:"h4",txt:"example",at:{id:"example"}},{t:"pre",ch:[{t:"code",lang:"",txt:'{\n  "success": false,\n  "error": {\n    "code": "ENOENT",\n    "message": "No such file or directory"\n  }\n}',nodes:1}]}],(new class extends p{constructor(){super(),this.data={ui:0},new o(document.body).sa("theme","dark")}didMount(){this.update({ui:1})}render(){return[{s:{display:0==this.data.ui?"flex":"none"}},{s:{display:1==this.data.ui?"block":"none"},t:"div",cl:"main",ch:[{t:"div",cl:["cont","doc"],at:{id:"main",role:"main"},ch:v},{t:"div",cl:"foot",at:{role:"contentinfo"},ch:[{t:"span",txt:"Copyright © 2021, Imesh Chamara. All rights reserved."}]}]}]}}).mount("#root")}();
